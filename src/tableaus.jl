"""
RosslerSRI

Holds the Butcher tableaus for a Rosser SRI method.
"""
immutable RosslerSRI{T,T2} <: Tableau
  c₀::Vector{T2}
  c₁::Vector{T2}
  A₀::Matrix{T}
  A₁::Matrix{T}
  B₀::Matrix{T}
  B₁::Matrix{T}
  α::Vector{T}
  β₁::Vector{T}
  β₂::Vector{T}
  β₃::Vector{T}
  β₄::Vector{T}
  order::Rational{Int}
end

"""
RosslerSRA

Holds the Butcher tableaus for a Rosser SRA method.
"""
immutable RosslerSRA{T,T2} <: Tableau
  c₀::Vector{T2}
  c₁::Vector{T2}
  A₀::Matrix{T}
  B₀::Matrix{T}
  α::Vector{T}
  β₁::Vector{T}
  β₂::Vector{T}
  order::Rational{Int}
end

"""
constructSRIW1()

Constructs the tableau type for the SRIW1 method.
"""
function constructSRIW1(T=Float64,T2=Float64)
  c₀ = [0;3//4;0;0]
  c₁ = [0;1//4;1;1//4]
  A₀ = [0 0 0 0
      3//4 0 0 0
      0 0 0 0
      0 0 0 0]
  A₁ = [0 0 0 0
      1//4 0 0 0
      1 0 0 0
      0 0 1//4 0]
  B₀ = [0 0 0 0
      3//2 0 0 0
      0 0 0 0
      0 0 0 0]
  B₁ = [0 0 0 0
      1//2 0 0 0
      -1 0 0 0
      -5 3 1//2 0]

  α = [1//3;2//3;0;0]

  β₁ = [-1;4//3;2//3;0]
  β₂ = -[1;-4//3;1//3;0]
  β₃ = [2;-4//3;-2//3;0]
  β₄ = [-2;5//3;-2//3;1]
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A₀),map(T,A₁),
             map(T,B₀),map(T,B₁),
             map(T,α),map(T,β₁),map(T,β₂),
             map(T,β₃),map(T,β₄),3//2)
end

"""
constructSRIOpt1()

Opti6-12-11-10-01-47
"""
function constructSRIOpt1(T=Float64,T2=Float64)
  A₀ = [0.0 0.0 0.0 0.0; -0.04199224421316468 0.0 0.0 0.0; 2.842612915017106 -2.0527723684000727 0.0 0.0; 4.338237071435815 -2.8895936137439793 2.3017575594644466 0.0]
  A₁ = [0.0 0.0 0.0 0.0; 0.26204282091330466 0.0 0.0 0.0; 0.20903646383505375 -0.1502377115150361 0.0 0.0; 0.05836595312746999 0.6149440396332373 0.08535117634046772 0.0]
  B₀ = [0.0 0.0 0.0 0.0; -0.21641093549612528 0.0 0.0 0.0; 1.5336352863679572 0.26066223492647056 0.0 0.0; -1.0536037558179159 1.7015284721089472 -0.20725685784180017 0.0]
  B₁ = [0.0 0.0 0.0 0.0; -0.5119011827621657 0.0 0.0 0.0; 2.67767339866713 -4.9395031322250995 0.0 0.0; 0.15580956238299215 3.2361551006624674 -1.4223118283355949 0.0]
  α  = [1.140099274172029,-0.6401334255743456,0.4736296532772559,0.026404498125060714]
  β₁ = [-1.8453464565104432,2.688764531100726,-0.2523866501071323,0.40896857551684956]
  β₂ = [0.4969658141589478,-0.5771202869753592,-0.12919702470322217,0.2093514975196336]
  β₃ = [2.8453464565104425,-2.688764531100725,0.2523866501071322,-0.40896857551684945]
  β₄ = [0.11522663875443433,-0.57877086147738,0.2857851028163886,0.17775911990655704]
  e = ones(size(α))
  c₀ = A₀*e
  c₁ = A₁*e
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A₀),map(T,A₁),
             map(T,B₀),map(T,B₁),
             map(T,α),map(T,β₁),map(T,β₂),
             map(T,β₃),map(T,β₄),3//2)
end

"""
constructSRIOpt2()

Opti7-1-19-21-27-57
"""
function constructSRIOpt2(T=Float64,T2=Float64)
  A0 = reshape([0.0,0.23736702338950375,-3.3879031976141665,4.8081988966320885,0.0,0.0,2.6847957809459526,-3.088487626304453,0.0,0.0,0.0,-0.31869551018307113,0.0,0.0,0.0,0.0],4,4)
  A1 = reshape([0.0,0.19721773165820847,0.9327595212359623,-0.0500818445908907,0.0,0.0,0.27875585047425205,0.03566681987533908,0.0,0.0,0.0,0.0542896692773617,0.0,0.0,0.0,0.0],4,4)
  B0 = reshape([0.0,0.5337060634581391,0.02462893345907009,-1.7438432450993013,0.0,0.0,-2.6541363815798014,4.397850294203606,0.0,0.0,0.0,-0.17951888922920461,0.0,0.0,0.0,0.0],4,4)
  B1 = reshape([0.0,-0.4440920306177633,-1.4628133767237455,0.5697273416539671,0.0,0.0,1.3496073953741128,-1.6597405620043353,0.0,0.0,0.0,2.1082016526098073,0.0,0.0,0.0,0.0],4,4)
  α  = [-1.3207660033294872,2.1901347611126782,0.09642125537893914,0.03420998683786982]
  β1 = [-1.6838707233490107,1.4273972250978673,0.5704739579799685,0.685999540271175]
  β2 = [1.059899911336994,-1.6178897785927493,0.25334293841387706,0.3046469288418783]
  β3 = [2.6838707233490102,-1.4273972250978644,-0.5704739579799699,-0.6859995402711753]
  β4 = [-3.9568500656066945,3.1909048716723882,-0.5631801607787009,1.3291253547130073]
  e = ones(size(α))
  c₀ = A0*e
  c₁ = A1*e
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A0),map(T,A1),
             map(T,B0),map(T,B1),
             map(T,α),map(T,β1),map(T,β2),
             map(T,β3),map(T,β4),3//2)
end

"""
constructSRIOpt3()

Opti7-1-17-06-38-41
"""
function constructSRIOpt3(T=Float64,T2=Float64)
  A0 = reshape([0.0,0.3468637234361462,0.6357060807521794,0.11212330695064389,0.0,0.0,0.041754838891117675,-3.993437409330635,0.0,0.0,0.0,-1.5884247381228052,0.0,0.0,0.0,0.0],4,4)
  A1 = reshape([0.0,0.835727137309742,1.4664287559538236,-3.2675627015417543,0.0,0.0,-0.005900440928510632,2.487250425854031,0.0,0.0,0.0,-1.2723324796679367,0.0,0.0,0.0,0.0],4,4)
  B0 = reshape([0.0,0.9482776700756552,1.8874370798985904,-1.8415895042043018,0.0,0.0,-0.04488321517987302,0.5437490988269468,0.0,0.0,0.0,-1.5475059535042817,0.0,0.0,0.0,0.0],4,4)
  B1 = reshape([0.0,0.9141811293774019,0.8181531617763057,-1.7372486424978264,0.0,0.0,-0.7986088802105423,2.0704873653456968,0.0,0.0,0.0,-1.6253012256336876,0.0,0.0,0.0,0.0],4,4)
  α  = [0.5654197424004141,-0.06614995342515217,0.5306169687460796,-0.029886757721341466]
  β1 = [-0.749075864141922,0.48426281642017077,0.9084381064360679,0.35637494128568326]
  β2 = [0.5050970207527302,0.6511711996648143,-0.8304769741111933,-0.32579124630635126]
  β3 = [1.7490758641419226,-0.4842628164201708,-0.9084381064360685,-0.3563749412856834]
  β4 = [-2.1158195286897667,0.9862110540243946,0.42539366556230856,0.7042148091030636]
  e = ones(size(α))
  c₀ = A0*e
  c₁ = A1*e
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A0),map(T,A1),
             map(T,B0),map(T,B1),
             map(T,α),map(T,β1),map(T,β2),
             map(T,β3),map(T,β4),3//2)
end

"""
constructSRIOpt4()

Opti7-1-14-09-46-17
"""
function constructSRIOpt4(T=Float64,T2=Float64)
  A0 = reshape([0.0,0.0039369547162335546,-2.0970913064530743,-1.0637176906005426,0.0,0.0,2.348004562684913,0.9435851279805889,0.0,0.0,0.0,4.981618861663432,0.0,0.0,0.0,0.0],4,4)
  A1 = reshape([0.0,0.16528093697476984,4.767668250907717,-2.011776641541188,0.0,0.0,-4.279999067155958,-0.22829528668668134,0.0,0.0,0.0,0.37537432896068335,0.0,0.0,0.0,0.0],4,4)
  B0 = reshape([0.0,-0.04795265836477372,2.147104174281902,-2.892847199716452,0.0,0.0,-0.7847263875958536,2.979417163320809,0.0,0.0,0.0,1.8611693964631457,0.0,0.0,0.0,0.0],4,4)
  B1 = reshape([0.0,0.4065475826699378,-2.0338713108704254,0.3344608109390388,0.0,0.0,0.9216427248707508,0.5340300061938158,0.0,0.0,0.0,-0.662200282521448,0.0,0.0,0.0,0.0],4,4)
  α  = [-0.6317590981646451,0.8952823157004709,0.6688748762491636,0.06760190621501072]
  β1 = [-1.0770074908486977,1.7210399063939419,0.5863527838459761,-0.23038519939122026]
  β2 = [-1.6153343023123372,1.7600520632812753,-0.23838030686437015,0.09366254589543212]
  β3 = [2.0770074908486986,-1.7210399063939426,-0.5863527838459762,0.2303851993912201]
  β4 = [-4.760523948499409,2.984539888183993,1.1981063857874676,0.5778776745279484]
  e = ones(size(α))
  c₀ = A0*e
  c₁ = A1*e
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A0),map(T,A1),
             map(T,B0),map(T,B1),
             map(T,α),map(T,β1),map(T,β2),
             map(T,β3),map(T,β4),3//2)
end

"""
constructSRIOpt5()

Opti6-12-24-14-43-33
"""
function constructSRIOpt5(T=Float64,T2=Float64)
  A₀ = [0.0 0.0 0.0 0.0; 0.0335821 0.0 0.0 0.0; -0.837558 1.66896 0.0 0.0; -3.02199 -0.0231945 -1.28897 0.0]
  A₁ = [0.0 0.0 0.0 0.0; 0.0669707 0.0 0.0 0.0; -1.01456 0.615095 0.0 0.0; 1.33323 4.32264 -0.10617 0.0]
  B₀ = [0.0 0.0 0.0 0.0; 0.0662565 0.0 0.0 0.0; 4.2937 -1.18 0.0 0.0; 0.877782 -0.993349 -3.49751 0.0]
  B₁ = [0.0 0.0 0.0 0.0; -0.258787 0.0 0.0 0.0; 0.741099 -1.2259 0.0 0.0; -0.589544 4.47264 -1.67813 0.0]
  α  = [1.58592,-0.766194,0.253035,-0.0727608]
  β₁ = [-0.544446,1.16903,0.195273,0.180138]
  β₂ = [3.4645,-3.56165,0.0505341,0.0466175]
  β₃ = [1.54445,-1.16903,-0.195273,-0.180138]
  β₄ = [0.197485,-3.97076,3.47522,0.298059]
  e = ones(size(α))
  c₀ = A₀*e
  c₁ = A₁*e
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A₀),map(T,A₁),
             map(T,B₀),map(T,B₁),
             map(T,α),map(T,β₁),map(T,β₂),
             map(T,β₃),map(T,β₄),3//2)
end

"""
constructSRIOpt6()

Opti6-12-24-14-43-33
"""
function constructSRIOpt6(T=Float64,T2=Float64)
  A₀ = [0.0 0.0 0.0 0.0; 0.0335821 0.0 0.0 0.0; -0.837558 1.66896 0.0 0.0; -3.02199 -0.0231945 -1.28897 0.0]
  A₁ = [0.0 0.0 0.0 0.0; 0.0669707 0.0 0.0 0.0; -1.01456 0.615095 0.0 0.0; 1.33323 4.32264 -0.10617 0.0]
  B₀ = [0.0 0.0 0.0 0.0; 0.0662565 0.0 0.0 0.0; 4.2937 -1.18 0.0 0.0; 0.877782 -0.993349 -3.49751 0.0]
  B₁ = [0.0 0.0 0.0 0.0; -0.258787 0.0 0.0 0.0; 0.741099 -1.2259 0.0 0.0; -0.589544 4.47264 -1.67813 0.0]
  α  = [1.58592,-0.766194,0.253035,-0.0727608]
  β₁ = [-0.544446,1.16903,0.195273,0.180138]
  β₂ = [3.4645,-3.56165,0.0505341,0.0466175]
  β₃ = [1.54445,-1.16903,-0.195273,-0.180138]
  β₄ = [0.197485,-3.97076,3.47522,0.298059]
  e = ones(size(α))
  c₀ = A₀*e
  c₁ = A₁*e
  RosslerSRI(map(T2,c₀),map(T2,c₁),
             map(T,A₀),map(T,A₁),
             map(T,B₀),map(T,B₁),
             map(T,α),map(T,β₁),map(T,β₂),
             map(T,β₃),map(T,β₄),3//2)
end

"""
constructSRIOpt6()

Opti6-12-24-14-43-33
"""
function constructSRIOpt7(T=Float64,T2=Float64)
  c0 = [0.0,0.3223097440448464,0.5470845755147704,0.40099907898335413]
  c1 = [0.0,0.9994784279412554,0.07501990518332248,0.9996684060034522]
  A0 = [0.0 0.0 0.0 0.0
        0.3223097440448464 0.0 0.0 0.0;
        0.3773042959410618 0.16978027957370861 0.0 0.0;
        0.35493687707900823 0.11744127390867108 -0.0713790720043252 0.0]
  A1 = [0.0 0.0 0.0 0.0
        0.9994784279412554 0.0 0.0 0.0
        0.0960616174725416 -0.02104171228921912 0.0 0.0
        0.966436990669836 0.021779688396234856 0.011451726937381276 0.0]
  B0 = reshape([0.0,0.47560683191662356,2.7402068186912047,3.262769757539981,0.0,0.0,-0.033639952228846234,-0.06072209822892156,0.0,0.0,0.0,-0.24061832769347538,0.0,0.0,0.0,0.0],4,4)
  B1 = reshape([0.0,-0.9997391799585104,-0.4155595543812061,-0.6493940185129368,0.0,0.0,-0.09062517378244228,0.6062520236089791,0.0,0.0,0.0,-0.45775640716153937,0.0,0.0,0.0,0.0],4,4)
  α  = [0.23844495307921124,0.3491130532951982,1.5202645494934617,-1.1078225558678978]
  β1 = [2.9801428007287094,2.0224622467616578,-3.222706161399859,-0.7798988860904547]
  β2 = [2.9798872278809787,1.021673859984202,-3.2218656150351332,-0.779695472830183]
  β3 = [-1.980142800728856,-2.022462246761684,3.2227061613998775,0.7798988860905797]
  β4 = [3.9714920240027043,4.033383886386803,-4.294541495522924,-3.710334414866611]
  RosslerSRI(map(T2,c0),map(T2,c1),
             map(T,A0),map(T,A1),
             map(T,B0),map(T,B1),
             map(T,α),map(T,β1),map(T,β2),
             map(T,β3),map(T,β4),3//2)
end


"""
constructSRA1()

Constructs the taleau type for the SRA1 method.
"""
function constructSRA1(T=Float64,T2=Float64)
  α  = [1//3;2//3]
  β₁ = [1;0]
  β₂ = [-1.0;1]
  A₀ = [0 0
       3//4 0]
  B₀ = [0 0
       3//2 0]
  c₀ = [0;3//4]
  c₁ = [1;0]
  RosslerSRA(map(T2,c₀),map(T2,c₁),
             map(T,A₀),map(T,B₀),
             map(T,α),map(T,β₁),map(T,β₂),4//2)
end

"""
checkSRIOrder(RosslerSRI)

Determines whether the order conditions are met via the tableaus of the SRI method.
"""
function checkSRIOrder(RosslerSRI;tol=1e-6)
  @unpack c₀,c₁,A₀,A₁,B₀,B₁,α,β₁,β₂,β₃,β₄ = RosslerSRI
  e = ones(size(α))
  conditions = Vector{Bool}(25)
  conditions[1] = abs(dot(α,e)-1)<tol
  conditions[2] = abs(dot(β₁,e)-1)<tol
  conditions[3] = abs(dot(β₂,e)-0)<tol
  conditions[4] = abs(dot(β₃,e)-0)<tol
  conditions[5] = abs(dot(β₄,e)-0)<tol
  conditions[6] = abs(sum(β₁'*B₁)-0)<tol
  conditions[7] = abs(sum(β₂'*B₁)-1)<tol
  conditions[8] = abs(sum(β₃'*B₁)-0)<tol
  conditions[9] = abs(sum(β₄'*B₁)-0)<tol
  conditions[10]= abs(sum(α'*A₀)- .5) < tol
  conditions[11]= abs(sum(α'*B₀)- 1) < tol
  conditions[12]= abs(sum(α'*(B₀*e).^2)- 3/2) < tol
  conditions[13]= abs(sum(β₁'*A₁)-1) < tol
  conditions[14]= abs(sum(β₂'*A₁)-0) < tol
  conditions[15]= abs(sum(β₃'*A₁)+1) < tol
  conditions[16]= abs(sum(β₄'*A₁)-0) < tol
  conditions[17]= abs(sum(β₁'*(B₁*e).^2)-1) < tol
  conditions[18]= abs(sum(β₂'*(B₁*e).^2)-0) < tol
  conditions[19]= abs(sum(β₃'*(B₁*e).^2)+1) < tol
  conditions[20]= abs(sum(β₄'*(B₁*e).^2)-2) < tol
  conditions[22]= abs(sum(β₂'*B₁*(B₁*e))-0) < tol
  conditions[21]= abs(sum(β₁'*B₁*(B₁*e))-0) < tol
  conditions[23]= abs(sum(β₃'*B₁*(B₁*e))-0) < tol
  conditions[24]= abs(sum(β₄'*B₁*(B₁*e))-1) < tol
  conditions[25]= abs.(.5*β₁'*(A₁*(B₀*e)) + (1/3)*β₃'*(A₁*(B₀*e)))[1] .< tol
  return(conditions)
end

"""
checkSRAOrder(RosslerSRI)

Determines whether the order conditions are met via the tableaus of the SRA method.
"""
function checkSRAOrder(SRA;tol=1e-6)
  @unpack c₀,c₁,A₀,B₀,α,β₁,β₂ = SRA
  e = ones(size(α))
  conditions = Vector{Bool}(8)
  conditions[1] = abs(dot(α,e)-1)<tol
  conditions[2] = abs(dot(β₁,e)-1)<tol
  conditions[3] = abs(dot(β₂,e)-0)<tol
  conditions[4] = abs(dot(α,B₀*e)-1).<tol
  conditions[5] = abs(dot(α,A₀*e)-1/2).<tol
  conditions[6] = abs(dot(α,(B₀*e).^2) - 3/2).<tol
  conditions[7] = abs(dot(β₁,c₁)-1)<tol
  conditions[8] = abs(dot(β₂,c₁)+1)<tol
  return(conditions)
end
